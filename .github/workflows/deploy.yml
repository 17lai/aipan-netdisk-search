name: Deploy to Production

on:
  push:
    branches:
      - feat-add-admin-panel # Changed from main to feat-add-admin-panel

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build application
        run: npm run build
        env:
          # Database configuration
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
          DATABASE_SCHEMA: ${{ secrets.DATABASE_SCHEMA }}

          # GitHub configuration
          NUXT_PUBLIC_GITHUB_OWNER: ${{ secrets.NUXT_PUBLIC_GITHUB_OWNER }}
          NUXT_PUBLIC_GITHUB_ADMIN_TOKEN: ${{ secrets.NUXT_PUBLIC_GITHUB_ADMIN_TOKEN }}
          NUXT_PUBLIC_GITHUB_REPO: ${{ secrets.NUXT_PUBLIC_GITHUB_REPO }}

          # Admin configuration
          ADMIN_USER: ${{ secrets.ADMIN_USER }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: ".output/*,prisma/*,package.json,package-lock.json"
          target: "/www/wwwroot/aipan-netdisk"
          strip_components: 1

      - name: Execute remote commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /www/wwwroot/aipan-netdisk

            echo "Creating .env file..."
            cat > .env << EOL
            DATABASE_URL="${{ secrets.DATABASE_URL }}"
            SHADOW_DATABASE_URL="${{ secrets.SHADOW_DATABASE_URL }}"
            DATABASE_SCHEMA="${{ secrets.DATABASE_SCHEMA }}"
            NUXT_PUBLIC_GITHUB_OWNER="${{ secrets.NUXT_PUBLIC_GITHUB_OWNER }}"
            NUXT_PUBLIC_GITHUB_ADMIN_TOKEN="${{ secrets.NUXT_PUBLIC_GITHUB_ADMIN_TOKEN }}"
            NUXT_PUBLIC_GITHUB_REPO="${{ secrets.NUXT_PUBLIC_GITHUB_REPO }}"
            ADMIN_USER="${{ secrets.ADMIN_USER }}"
            ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}"
            ADMIN_EMAIL="${{ secrets.ADMIN_EMAIL }}"
            JWT_SECRET="${{ secrets.JWT_SECRET }}"
            EOL

            echo "Installing production dependencies..."
            npm ci --production

            echo "Installing Prisma..."
            npm install prisma

            echo "Generating Prisma Client..."
            npx prisma generate

            echo "Running database migrations..."
            npx prisma migrate deploy

            echo "Starting application..."
            if pm2 list | grep -q "aipan-netdisk"; then
              echo "Reloading existing PM2 process..."
              pm2 reload aipan-netdisk
            else
              echo "Starting new PM2 process..."
              pm2 start server/index.mjs --name "aipan-netdisk" --env production
            fi
